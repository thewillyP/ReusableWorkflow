name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag:
        required: false
        type: string
      tags:
        required: false
        type: string
      build_args:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Extract variant from build_args
        id: extract
        run: |
          VARIANT=$(echo "${{ inputs.build_args }}" | grep -oP 'VARIANT=\K[^ ]+')
          echo "variant=$VARIANT" >> $GITHUB_ENV
      -
        name: Determine tags
        id: tags
        run: |
          if [ -n "${{ inputs.tags }}" ]; then
            echo "tags=${{ inputs.tags }}" >> $GITHUB_ENV
          elif [ -n "${{ inputs.tag }}" ]; then
            echo "tags=type=raw,value=${{ inputs.tag }}" >> $GITHUB_ENV
          else
            echo "No tags provided"
            exit 1
          fi
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.image_name }}
          tags: |
            ${{ env.tags }}
            type=ref,event=pr
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build_args }}
